export const dynamic = 'force-dynamic';

import Link from 'next/link';
import styles from './allWorks.module.css';
import { MyWork } from '@/entities/portfolio/model';
import { transliterate } from '@/entities/Translater';
import Image from 'next/image';

const AllWorksServer = async () => {
  const url = `${process.env.NEXT_PUBLIC_API_URL}/my-work`;
  // const url = `http://server:3001/api/my-work`;

  console.log('üì° –ó–∞–ø—Ä–æ—Å –ø–æ –∞–¥—Ä–µ—Å—É:', url);
  const works = await fetch(url, { cache: 'no-store' }).then((works) => works.json());

  // const works = await res.json();
  console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', works);

  if (!works?.data.length) {
    return <div className={styles.empty}>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–±–æ—Ç</div>;
  }

  return (
    <div className={styles.container}>
      <div className={styles.headerContainer}>
        <Link href="/" className={styles.backButton} aria-label="–ù–∞–∑–∞–¥">
          –ù–∞–∑–∞–¥
        </Link>
        <h1 className={styles.title}>–í—Å–µ –Ω–∞—à–∏ —Ä–∞–±–æ—Ç—ã</h1>
      </div>

      <div className={styles.worksGrid}>
        {works.data.map((work: MyWork) => (
          <div key={work.id} className={styles.workCard}>
            <h3 className={styles.workTitle}>{work.title}</h3>

            {work.image && (
              <div className={styles.imageContainer}>
                <Image
                  src={`http://localhost:3001${work.image}`}
                  alt={work.title || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã'}
                  className={styles.workImage}
                  fetchPriority="high"
                />
              </div>
            )}

            <Link
              href={`/portfolio/details/${transliterate(work.title || 'my_work')}-${
                work.id
              }`}
              className={styles.detailsButton}
            >
              –ü–æ–¥—Ä–æ–±–Ω–µ–µ
            </Link>
          </div>
        ))}
      </div>
    </div>
  );
};

export default AllWorksServer;
